# Test and build the project.
---
name: Build

on:
  # Allow manual trigger
  workflow_dispatch:

  # Run on every pull request
  pull_request:
    branches: ["*"]

  # Run on every push to main
  push:
    branches: ["main"]

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest-8-cores

    name: Create binary for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    env:
      CARGO: cargo
      TARGET_FLAGS: ""
      TARGET_DIR: ../target
      RUST_BACKTRACE: 1

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
          rustflags: "" # Do not fail on warnings, so reset the default value to empty

      - uses: giraffate/clippy-action@v1
        with:
          reporter: github-pr-check
          filter_mode: nofilter
          fail_on_error: true
          clippy_flags: --all-features --no-deps

      - name: cargo test
        run: cargo test

      - name: cargo build
        run: cargo build --release --package fpx-cli

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fpx_${{ matrix.target }}
          path: target/release/fpx-cli
          if-no-files-found: error
          retention-days: 7
