# This workflow will be triggered by a GitHub pull-request.
---
name: Build node packages

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main", "release-*"]

env:
  CARGO_TERM_COLOR: always
  FORCE_COLOR: true

jobs:
  build_packages:
    name: Build packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm"

      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install
        env:
          CI: true

      # Linting: we use global biome command
      # any extra commands should be added to the lint:ci script
      # in the package.json

      - name: Lint all workspaces (biome)
        run: biome ci .

      - name: Lint all workspaces (eslint)
        run: pnpm run --recursive lint:ci

      - name: Typecheck all workspaces
        run: pnpm run --recursive typecheck

      # HACK: Install rollup to make client-library build succeed due to npm bug with optional dependencies
      # - name: Install Rollup for Linux
      #   run: pnpm install @rollup/rollup-linux-x64-gnu --save-dev

      # HACK: For some reason need to install swc bindings in CI too
      # - name: Install swc
      #   run: npm install @swc/cli @swc/core @swc/plugin-transform-imports --save-dev

      # HACK: This is getting ridiculous, but we need the linux-x64 build for sharp
      # - name: Install sharp
      #   run: npm install --os=linux --cpu=x64 sharp --save-dev

      - name: Build all workspaces
        run: pnpm run build --recursive
