# Test and build the project.
---
name: Build cli
on:
  # Allow manual trigger
  workflow_dispatch:

  # Run on every pull request
  pull_request:
    branches: ["*"]

  # Run on every push to main
  push:
    branches: ["main", "tauri-main"]

jobs:
  build:
    name: Create binary for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest-8-cores
            target: x86_64-unknown-linux-gnu

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest-8-cores'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
          rustflags: "" # Do not fail on warnings, so reset the default value to empty

      - uses: giraffate/clippy-action@v1
        with:
          reporter: github-pr-check
          filter_mode: nofilter
          fail_on_error: true
          clippy_flags: --all-features --no-deps

      - name: cargo test
        run: cargo test

      - name: cargo build
        run: cargo build --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fpx_${{ matrix.target }}
          path: target/release/fpx-cli
          if-no-files-found: error
          retention-days: 7
