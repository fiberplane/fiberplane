{"context":"[\n  \"<expanded-function>\\n<entry>\\n  <name filename=\\\"index.mjs\\\">neon</name>\\n  <definition>\\n    #third-party-library-code\\n  </definition>\\n  <package>@neondatabase+serverless@0.10.1/node_modules</package>\\n</entry>\\n<entry>\\n  <name filename=\\\"driver.js\\\">drizzle</name>\\n  <definition>\\n    #third-party-library-code\\n  </definition>\\n  <package>drizzle-orm@0.35.3_@cloudflare+workers-types@4.20241022.0_@libsql+client-wasm@0.14.0_@libsql+_32z3jowq6bwfxjazeh5bxmnv6m</package>\\n</entry>\\n<entry>\\n  <name filename=\\\"measure.js\\\">measure</name>\\n  <definition>\\n    #third-party-library-code\\n  </definition>\\n</entry>\\n<entry>\\n  <name filename=\\\"client.ts\\\">getGooseById</name>\\n  <definition>\\n    async (\\n      db: ReturnType<typeof drizzle>,\\n      id: number,\\n    ) => {\\n      console.log(`Fetching goose with id: ${id}`);\\n      return (await db.select().from(geese).where(eq(geese.id, id)))?.[0];\\n    }\\n  </definition>\\n</entry>\\n<entry>\\n  <name filename=\\\"client.ts\\\">updateGoose</name>\\n  <definition>\\n    async (\\n      db: ReturnType<typeof drizzle>,\\n      id: number,\\n      updateData: Partial<typeof geese.$inferInsert>,\\n    ) => {\\n      console.log({ action: \\\"updateGoose\\\", id, updateData });\\n    \\n      // Simulate a race condition by splitting the update into two parts\\n      const updatePromises = Object.entries(updateData).map(\\n        async ([key, value]) => {\\n          // Introduce a random delay to increase the chance of interleaved updates\\n          await new Promise((resolve) => setTimeout(resolve, Math.random() * 1000));\\n    \\n          return db\\n            .update(geese)\\n            .set({ [key]: value })\\n            .where(eq(geese.id, id))\\n            .returning();\\n        },\\n      );\\n    \\n      // Wait for all updates to complete\\n      const results = await Promise.all(updatePromises);\\n    \\n      // Return the last result, which may not contain all updates\\n      return results[results.length - 1][0];\\n    }\\n  </definition>\\n</entry>\\n</expanded-function>\",\n  null\n]","routeId":3095,"method":"POST","path":"/api/geese/:id/avatar"}