// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`run test 'barrel files' with location '/Users/jaccoflenter/dev/fiberplane/fp…' 1`] = `
{
  "errorCount": 0,
  "results": [
    {
      "entries": [
        {
          "method": "get",
          "path": "/user/1",
          "sources": [
            {
              "character": 19,
              "content": "cors()",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/barrel-files/index.ts",
              "line": 14,
              "modules": {
                "hono": [
                  {
                    "import": "cors",
                    "importPath": "hono/cors",
                    "name": "hono",
                    "version": "4.6.6",
                  },
                ],
              },
              "references": [],
            },
            {
              "character": 27,
              "content": "async (c) => {
  // await getUser();
  const user = await getUser();
  return c.json(user);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/barrel-files/index.ts",
              "line": 14,
              "modules": {},
              "references": [
                {
                  "character": 9,
                  "content": "export { getUser } from "./getUser"",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/barrel-files/db/index.ts",
                  "line": 0,
                  "modules": {},
                  "references": [
                    {
                      "character": 23,
                      "content": "const getUser = measure("getUser", async () => {
  await sleep(100);
  const value: User = {
    name: DEFAULT_USER_NAME,
    email: DEFAULT_EMAIL,
  };
  return value;
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/barrel-files/db/getUser.ts",
                      "line": 7,
                      "modules": {
                        "@fiberplane/hono-otel": [
                          {
                            "import": "measure",
                            "importPath": "@fiberplane/hono-otel",
                            "name": "@fiberplane/hono-otel",
                            "version": "0.3.1",
                          },
                        ],
                      },
                      "references": [
                        {
                          "character": 0,
                          "content": "export async function sleep(duration: number) {
  return new Promise((resolve) => setTimeout(resolve, duration));
}",
                          "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/barrel-files/utils.ts",
                          "line": 0,
                          "modules": {},
                          "references": [],
                        },
                        {
                          "character": 0,
                          "content": "export type User = {
  name: string;
  email: Email;
};",
                          "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/barrel-files/types.ts",
                          "line": 2,
                          "modules": {},
                          "references": [
                            {
                              "character": 0,
                              "content": "export type Email = string;",
                              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/barrel-files/types.ts",
                              "line": 0,
                              "modules": {},
                              "references": [],
                            },
                          ],
                        },
                        {
                          "character": 6,
                          "content": "const DEFAULT_USER_NAME = "John Doe"",
                          "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/barrel-files/db/getUser.ts",
                          "line": 4,
                          "modules": {},
                          "references": [],
                        },
                        {
                          "character": 6,
                          "content": "const DEFAULT_EMAIL = "john@doe.com"",
                          "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/barrel-files/db/getUser.ts",
                          "line": 5,
                          "modules": {},
                          "references": [],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/",
          "sources": [
            {
              "character": 13,
              "content": "(c) => c.text("Hello, Hono!")",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/barrel-files/index.ts",
              "line": 20,
              "modules": {},
              "references": [],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
      ],
      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/barrel-files/index.ts",
      "name": "app",
    },
  ],
}
`;

exports[`run test 'goose-quotes' with location '/Users/jaccoflenter/dev/fiberplane/fp…' 1`] = `
{
  "errorCount": 0,
  "results": [
    {
      "entries": [
        {
          "method": "get",
          "path": "/",
          "sources": [
            {
              "character": 13,
              "content": "(c) => {
  const honk = shouldHonk(c.req) ? "Honk honk!" : "";
  console.log(\`Home page accessed. Honk: \${honk}\`);
  return c.text(\`Hello Goose Quotes! \${honk}\`.trim());
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 33,
              "modules": {},
              "references": [
                {
                  "character": 0,
                  "content": "export function shouldHonk(r: HonoRequest) {
  const { shouldHonk } = r.query();
  return typeof shouldHonk !== "undefined";
}",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/utils.ts",
                  "line": 2,
                  "modules": {
                    "hono": [
                      {
                        "import": "HonoRequest",
                        "importPath": "hono",
                        "name": "hono",
                        "version": "4.5.9",
                      },
                    ],
                  },
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/api/geese",
          "sources": [
            {
              "character": 22,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const name = c.req.query("name");
  console.log({ action: "search_geese", name });

  if (!name) {
    const allGeese = await measure("getAllGeese", () => getAllGeese(db))();
    console.log({ action: "get_all_geese", count: allGeese.length });
    return c.json(allGeese);
  }

  const searchResults = await measure("searchGeese", () =>
    db
      .select()
      .from(geese)
      .where(ilike(geese.name, \`%\${name}%\`))
      .orderBy(asc(geese.name)),
  )();

  console.log({
    action: "search_geese_results",
    count: searchResults.length,
    name,
  });

  return c.json(searchResults);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 44,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                  {
                    "import": "ilike",
                    "importPath": "drizzle-orm",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                  {
                    "import": "asc",
                    "importPath": "drizzle-orm",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 27,
                  "content": "const getAllGeese = measure("getAllGeese", async (db: ReturnType<typeof drizzle>) => {
  console.log("Fetching all geese");
  return await db.select().from(geese);
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 6,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [],
                },
                {
                  "character": 21,
                  "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                  "line": 10,
                  "modules": {
                    "drizzle-orm": [
                      {
                        "import": "pgTable",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "serial",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "text",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "boolean",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "jsonb",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "integer",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "timestamp",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [],
                },
                {
                  "character": 21,
                  "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                  "line": 10,
                  "modules": {
                    "drizzle-orm": [
                      {
                        "import": "pgTable",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "serial",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "text",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "boolean",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "jsonb",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "integer",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "timestamp",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [],
                },
                {
                  "character": 21,
                  "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                  "line": 10,
                  "modules": {
                    "drizzle-orm": [
                      {
                        "import": "pgTable",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "serial",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "text",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "boolean",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "jsonb",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "integer",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "timestamp",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/api/geese-with-avatar",
          "sources": [
            {
              "character": 34,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  console.log("Fetching geese with avatars");

  const geeseWithAvatars = await measure("getGeeseWithAvatars", () =>
    db
      .select()
      .from(geese)
      .where(not(isNull(geese.avatar)))
      .orderBy(asc(geese.id)),
  )();

  console.log(\`Found \${geeseWithAvatars.length} geese with avatars\`);
  return c.json(geeseWithAvatars.map((g) => g.id));
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 77,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                  {
                    "import": "not",
                    "importPath": "drizzle-orm",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                  {
                    "import": "isNull",
                    "importPath": "drizzle-orm",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                  {
                    "import": "asc",
                    "importPath": "drizzle-orm",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 21,
                  "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                  "line": 10,
                  "modules": {
                    "drizzle-orm": [
                      {
                        "import": "pgTable",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "serial",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "text",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "boolean",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "jsonb",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "integer",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "timestamp",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [],
                },
                {
                  "character": 21,
                  "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                  "line": 10,
                  "modules": {
                    "drizzle-orm": [
                      {
                        "import": "pgTable",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "serial",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "text",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "boolean",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "jsonb",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "integer",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "timestamp",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [],
                },
                {
                  "character": 21,
                  "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                  "line": 10,
                  "modules": {
                    "drizzle-orm": [
                      {
                        "import": "pgTable",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "serial",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "text",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "boolean",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "jsonb",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "integer",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "timestamp",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "post",
          "path": "/api/geese",
          "sources": [
            {
              "character": 23,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const { name, isFlockLeader, programmingLanguage, motivations, location } =
    await c.req.json();
  const description = \`A person named \${name} who talks like a Goose\`;

  console.log(\`Creating new goose: \${name}\`);

  const created = await measure("createGoose", () =>
    createGoose(db, {
      name,
      description,
      isFlockLeader,
      programmingLanguage,
      motivations,
      location,
    }),
  )();
  console.log({ action: "create_goose", id: created[0].id, name });
  return c.json(created);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 100,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 27,
                  "content": "const createGoose = measure("createGoose", async (
  db: ReturnType<typeof drizzle>,
  gooseData: Partial<typeof geese.$inferInsert> & Pick<typeof geese.$inferInsert, "name">,
) => {
  const { name, isFlockLeader, programmingLanguage, motivations, location } =
    gooseData;
  const description = \`A person named \${name} who talks like a Goose\`;

  console.log({
    action: "createGoose",
    name,
    isFlockLeader,
    programmingLanguage,
  });

  return await db
    .insert(geese)
    .values({
      name,
      description,
      isFlockLeader,
      programmingLanguage,
      motivations,
      location,
    })
    .returning({
      id: geese.id,
      name: geese.name,
      description: geese.description,
      isFlockLeader: geese.isFlockLeader,
      programmingLanguage: geese.programmingLanguage,
      motivations: geese.motivations,
      location: geese.location,
    });
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 23,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "post",
          "path": "/api/geese/:id/generate",
          "sources": [
            {
              "character": 36,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const id = c.req.param("id");

  const goose = await measure("getGooseById", () => getGooseById(db, +id))();

  if (!goose) {
    console.warn(\`Goose not found: \${id}\`);
    return c.json({ message: "Goose not found" }, 404);
  }

  const { name: gooseName } = goose;

  const openaiClient = new OpenAI({
    apiKey: c.env.OPENAI_API_KEY,
    // HACK - OpenAI freezes fetch when it is imported, so our monkey-patched version needs to be passed here
    fetch: globalThis.fetch,
  });

  console.log(\`Generating quotes for goose: \${gooseName}\`);

  const response = await measure("generateQuotes", () =>
    openaiClient.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: trimPrompt(\`
              You are a goose. You are a very smart goose. You are part goose, part AI. You are a GooseAI.
              You are also influenced heavily by the work of \${gooseName}.

              Always respond without preamble. If I ask for a list, give me a newline-separated list. That's it.
              Don't number it. Don't bullet it. Just newline it.

              Never forget to Honk. A lot.
          \`),
        },
        {
          role: "user",
          content: trimPrompt(\`
              Reimagine five famous quotes by \${gooseName}, except with significant goose influence.
          \`),
        },
      ],
      temperature: 0.7,
      max_tokens: 2048,
    }),
  )();

  const quotes = response.choices[0].message.content
    ?.split("\\n")
    .filter((quote) => quote.length > 0);
  console.log({
    action: "generate_quotes",
    gooseName,
    quoteCount: quotes?.length,
  });
  return c.json({ name: goose.name, quotes });
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 127,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
                "openai": [
                  {
                    "import": "OpenAI",
                    "importPath": "openai",
                    "name": "openai",
                    "version": "4.55.4",
                  },
                ],
              },
              "references": [
                {
                  "character": 28,
                  "content": "const getGooseById = measure("getGooseById", async (
  db: ReturnType<typeof drizzle>,
  id: number,
) => {
  console.log(\`Fetching goose with id: \${id}\`);
  return (await db.select().from(geese).where(eq(geese.id, id)))?.[0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 59,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
                {
                  "character": 0,
                  "content": "function trimPrompt(prompt: string) {
  return prompt
    .trim()
    .split("\\n")
    .map((l) => l.trim())
    .join("\\n");
}",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
                  "line": 615,
                  "modules": {},
                  "references": [],
                },
                {
                  "character": 0,
                  "content": "function trimPrompt(prompt: string) {
  return prompt
    .trim()
    .split("\\n")
    .map((l) => l.trim())
    .join("\\n");
}",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
                  "line": 615,
                  "modules": {},
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/api/geese/flock-leaders",
          "sources": [
            {
              "character": 36,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  console.log("Fetching flock leaders");

  const flockLeaders = await measure("getFlockLeaders", () =>
    db.select().from(geese).where(eq(geese.isFlockLeader, true)),
  )();

  console.log(\`Found \${flockLeaders.length} flock leaders\`);

  return c.json(flockLeaders);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 193,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                  {
                    "import": "eq",
                    "importPath": "drizzle-orm",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 21,
                  "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                  "line": 10,
                  "modules": {
                    "drizzle-orm": [
                      {
                        "import": "pgTable",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "serial",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "text",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "boolean",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "jsonb",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "integer",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "timestamp",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [],
                },
                {
                  "character": 21,
                  "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                  "line": 10,
                  "modules": {
                    "drizzle-orm": [
                      {
                        "import": "pgTable",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "serial",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "text",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "boolean",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "jsonb",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "integer",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "timestamp",
                        "importPath": "drizzle-orm/pg-core",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/api/geese/:id",
          "sources": [
            {
              "character": 26,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const id = c.req.param("id");

  console.log(\`Fetching goose with id: \${id}\`);

  const goose = await measure("getGooseById", () => getGooseById(db, +id))();

  if (!goose) {
    console.warn(\`Goose not found: \${id}\`);
    return c.json({ message: "Goose not found" }, 404);
  }

  console.log(\`Found goose: \${goose.name}\`);
  return c.json(goose);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 211,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 28,
                  "content": "const getGooseById = measure("getGooseById", async (
  db: ReturnType<typeof drizzle>,
  id: number,
) => {
  console.log(\`Fetching goose with id: \${id}\`);
  return (await db.select().from(geese).where(eq(geese.id, id)))?.[0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 59,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "post",
          "path": "/api/geese/:id/bio",
          "sources": [
            {
              "character": 31,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const id = c.req.param("id");

  const goose = await measure("getGooseById", () => getGooseById(db, +id))();

  if (!goose) {
    console.warn(\`Goose not found: \${id}\`);
    return c.json({ message: "Goose not found" }, 404);
  }

  const {
    name: gooseName,
    description,
    programmingLanguage,
    motivations,
    location,
  } = goose;

  console.log(\`Generating bio for goose: \${gooseName}\`);

  const openaiClient = new OpenAI({
    apiKey: c.env.OPENAI_API_KEY,
    fetch: globalThis.fetch,
  });

  const response = await measure("generateBio", () =>
    openaiClient.chat.completions.create({
      model: "gpt-4o",
      messages: [
        {
          role: "system",
          content: trimPrompt(\`
              You are a professional bio writer. Your task is to generate a compelling and engaging bio for a goose.
          \`),
        },
        {
          role: "user",
          content: trimPrompt(\`
              Generate a bio for a goose named \${gooseName} with the following details:
              Description: \${description}
              Programming Language: \${programmingLanguage}
              Motivations: \${motivations}
              Location: \${location}
          \`),
        },
      ],
      temperature: 0.7,
      max_tokens: 2048,
    }),
  )();

  const bio = response.choices[0].message.content;

  // Update the goose with the generated bio
  const updatedGoose = await measure("updateGoose", () =>
    updateGoose(db, +id, { bio }),
  )();

  console.log(\`Bio generated and updated for goose: \${gooseName}\`);
  return c.json(updatedGoose);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 233,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
                "openai": [
                  {
                    "import": "OpenAI",
                    "importPath": "openai",
                    "name": "openai",
                    "version": "4.55.4",
                  },
                ],
              },
              "references": [
                {
                  "character": 28,
                  "content": "const getGooseById = measure("getGooseById", async (
  db: ReturnType<typeof drizzle>,
  id: number,
) => {
  console.log(\`Fetching goose with id: \${id}\`);
  return (await db.select().from(geese).where(eq(geese.id, id)))?.[0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 59,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
                {
                  "character": 0,
                  "content": "function trimPrompt(prompt: string) {
  return prompt
    .trim()
    .split("\\n")
    .map((l) => l.trim())
    .join("\\n");
}",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
                  "line": 615,
                  "modules": {},
                  "references": [],
                },
                {
                  "character": 0,
                  "content": "function trimPrompt(prompt: string) {
  return prompt
    .trim()
    .split("\\n")
    .map((l) => l.trim())
    .join("\\n");
}",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
                  "line": 615,
                  "modules": {},
                  "references": [],
                },
                {
                  "character": 27,
                  "content": "const updateGoose = measure("updateGoose", async (
  db: ReturnType<typeof drizzle>,
  id: number,
  updateData: Partial<typeof geese.$inferInsert>,
) => {
  console.log({ action: "updateGoose", id, updateData });

  // Simulate a race condition by splitting the update into two parts
  const updatePromises = Object.entries(updateData).map(
    async ([key, value]) => {
      // Introduce a random delay to increase the chance of interleaved updates
      await new Promise((resolve) => setTimeout(resolve, Math.random() * 1000));

      return db
        .update(geese)
        .set({ [key]: value })
        .where(eq(geese.id, id))
        .returning();
    },
  );

  // Wait for all updates to complete
  const results = await Promise.all(updatePromises);

  // Return the last result, which may not contain all updates
  return results[results.length - 1][0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 124,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "post",
          "path": "/api/geese/:id/honk",
          "sources": [
            {
              "character": 32,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const id = c.req.param("id");
  const goose = await measure("getGooseById", () => getGooseById(db, +id))();

  if (!goose) {
    console.warn(\`Goose not found: \${id}\`);
    return c.json({ message: "Goose not found" }, 404);
  }

  const currentHonks = goose.honks || 0;

  const updatedGoose = await measure("updateGoose", () =>
    updateGoose(db, +id, { honks: currentHonks + 1 }),
  )();

  console.log(
    \`Honk received for goose: \${goose.name}. New honk count: \${updatedGoose.honks}\`,
  );
  return c.json({
    message: \`Honk honk! \${goose.name} honks back at you!\`,
    honks: updatedGoose.honks,
  });
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 301,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 28,
                  "content": "const getGooseById = measure("getGooseById", async (
  db: ReturnType<typeof drizzle>,
  id: number,
) => {
  console.log(\`Fetching goose with id: \${id}\`);
  return (await db.select().from(geese).where(eq(geese.id, id)))?.[0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 59,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
                {
                  "character": 27,
                  "content": "const updateGoose = measure("updateGoose", async (
  db: ReturnType<typeof drizzle>,
  id: number,
  updateData: Partial<typeof geese.$inferInsert>,
) => {
  console.log({ action: "updateGoose", id, updateData });

  // Simulate a race condition by splitting the update into two parts
  const updatePromises = Object.entries(updateData).map(
    async ([key, value]) => {
      // Introduce a random delay to increase the chance of interleaved updates
      await new Promise((resolve) => setTimeout(resolve, Math.random() * 1000));

      return db
        .update(geese)
        .set({ [key]: value })
        .where(eq(geese.id, id))
        .returning();
    },
  );

  // Wait for all updates to complete
  const results = await Promise.all(updatePromises);

  // Return the last result, which may not contain all updates
  return results[results.length - 1][0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 124,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "patch",
          "path": "/api/geese/:id",
          "sources": [
            {
              "character": 28,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const id = c.req.param("id");
  const updateData = await c.req.json();

  console.log(\`Updating goose \${id} with data:\`, updateData);

  const goose = await measure("getGooseById", () => getGooseById(db, +id))();

  if (!goose) {
    console.warn(\`Goose not found: \${id}\`);
    return c.json({ message: "Goose not found" }, 404);
  }

  // Simulate a race condition by splitting the update into multiple parts
  const updatePromises = Object.entries(updateData).map(
    async ([key, value]) => {
      await new Promise((resolve) => setTimeout(resolve, Math.random() * 1000));
      return measure("updateGoose", () =>
        updateGoose(db, +id, { [key]: value }),
      )();
    },
  );

  await Promise.all(updatePromises);

  const updatedGoose = await measure("getGooseById", () =>
    getGooseById(db, +id),
  )();

  console.log(\`Goose \${id} updated successfully\`);
  return c.json(updatedGoose);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 331,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 28,
                  "content": "const getGooseById = measure("getGooseById", async (
  db: ReturnType<typeof drizzle>,
  id: number,
) => {
  console.log(\`Fetching goose with id: \${id}\`);
  return (await db.select().from(geese).where(eq(geese.id, id)))?.[0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 59,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
                {
                  "character": 27,
                  "content": "const updateGoose = measure("updateGoose", async (
  db: ReturnType<typeof drizzle>,
  id: number,
  updateData: Partial<typeof geese.$inferInsert>,
) => {
  console.log({ action: "updateGoose", id, updateData });

  // Simulate a race condition by splitting the update into two parts
  const updatePromises = Object.entries(updateData).map(
    async ([key, value]) => {
      // Introduce a random delay to increase the chance of interleaved updates
      await new Promise((resolve) => setTimeout(resolve, Math.random() * 1000));

      return db
        .update(geese)
        .set({ [key]: value })
        .where(eq(geese.id, id))
        .returning();
    },
  );

  // Wait for all updates to complete
  const results = await Promise.all(updatePromises);

  // Return the last result, which may not contain all updates
  return results[results.length - 1][0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 124,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
                {
                  "character": 28,
                  "content": "const getGooseById = measure("getGooseById", async (
  db: ReturnType<typeof drizzle>,
  id: number,
) => {
  console.log(\`Fetching goose with id: \${id}\`);
  return (await db.select().from(geese).where(eq(geese.id, id)))?.[0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 59,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/api/geese/language/:language",
          "sources": [
            {
              "character": 41,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const language = c.req.param("language");

  console.log(\`Fetching geese with programming language: \${language}\`);

  const geeseByLanguage = await measure("getGeeseByLanguage", () =>
    getGeeseByLanguage(db, language),
  )();

  console.log(
    \`Found \${geeseByLanguage.length} geese for language: \${language}\`,
  );
  return c.json(geeseByLanguage);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 370,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 34,
                  "content": "const getGeeseByLanguage = measure("getGeeseByLanguage", async (
  db: ReturnType<typeof drizzle>,
  language: string,
) => {
  console.log(\`Fetching geese with programming language: \${language}\`);
  return await db
    .select()
    .from(geese)
    .where(ilike(geese.programmingLanguage, \`%\${language}%\`));
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 83,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "ilike",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "patch",
          "path": "/api/geese/:id/motivations",
          "sources": [
            {
              "character": 40,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const id = c.req.param("id");
  const { motivations } = await c.req.json();

  console.log(\`Updating motivations for goose \${id}\`);

  const updatedGoose = await measure("updateGoose", () =>
    updateGoose(db, +id, { motivations }),
  )();

  if (!updatedGoose) {
    console.warn(\`Goose not found: \${id}\`);
    return c.json({ message: "Goose not found" }, 404);
  }

  console.log(\`Motivations updated for goose \${id}\`);
  return c.json(updatedGoose);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 391,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 27,
                  "content": "const updateGoose = measure("updateGoose", async (
  db: ReturnType<typeof drizzle>,
  id: number,
  updateData: Partial<typeof geese.$inferInsert>,
) => {
  console.log({ action: "updateGoose", id, updateData });

  // Simulate a race condition by splitting the update into two parts
  const updatePromises = Object.entries(updateData).map(
    async ([key, value]) => {
      // Introduce a random delay to increase the chance of interleaved updates
      await new Promise((resolve) => setTimeout(resolve, Math.random() * 1000));

      return db
        .update(geese)
        .set({ [key]: value })
        .where(eq(geese.id, id))
        .returning();
    },
  );

  // Wait for all updates to complete
  const results = await Promise.all(updatePromises);

  // Return the last result, which may not contain all updates
  return results[results.length - 1][0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 124,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "post",
          "path": "/api/geese/:id/change-name-url-form",
          "sources": [
            {
              "character": 48,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const id = c.req.param("id");
  const goose = await measure("getGooseById", () => getGooseById(db, +id))();

  if (!goose) {
    console.warn(\`Goose not found: \${id}\`);
    return c.json({ message: "Goose not found" }, 404);
  }

  const form = await c.req.formData() as FormData;
  const name = form.get("name");

  if (!name) {
    console.error("Name is required for changing goose name");
    return c.json({ message: "Name is required" }, 400);
  }

  console.log(\`Changing name of goose \${id} to \${name}\`);
  const updatedGoose = await measure("updateGoose", () =>
    updateGoose(db, +id, { name }),
  )();

  console.log(\`Name changed for goose \${id}\`);
  return c.json(updatedGoose, 200);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 413,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 28,
                  "content": "const getGooseById = measure("getGooseById", async (
  db: ReturnType<typeof drizzle>,
  id: number,
) => {
  console.log(\`Fetching goose with id: \${id}\`);
  return (await db.select().from(geese).where(eq(geese.id, id)))?.[0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 59,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
                {
                  "character": 27,
                  "content": "const updateGoose = measure("updateGoose", async (
  db: ReturnType<typeof drizzle>,
  id: number,
  updateData: Partial<typeof geese.$inferInsert>,
) => {
  console.log({ action: "updateGoose", id, updateData });

  // Simulate a race condition by splitting the update into two parts
  const updatePromises = Object.entries(updateData).map(
    async ([key, value]) => {
      // Introduce a random delay to increase the chance of interleaved updates
      await new Promise((resolve) => setTimeout(resolve, Math.random() * 1000));

      return db
        .update(geese)
        .set({ [key]: value })
        .where(eq(geese.id, id))
        .returning();
    },
  );

  // Wait for all updates to complete
  const results = await Promise.all(updatePromises);

  // Return the last result, which may not contain all updates
  return results[results.length - 1][0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 124,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "post",
          "path": "/api/geese/:id/avatar",
          "sources": [
            {
              "character": 34,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const id = c.req.param("id");

  const goose = await measure("getGooseById", () => getGooseById(db, +id))();

  if (!goose) {
    console.warn(\`Goose not found: \${id}\`);
    return c.json({ message: "Goose not found" }, 404);
  }

  const { avatar, avatarName } = await c.req.parseBody();
  console.log({ action: "update_avatar", gooseId: id, avatarName });
  // Validate the avatar is a file
  if (!(avatar instanceof File)) {
    console.error(\`Invalid avatar type for goose \${id}: \${typeof avatar}\`);
    return c.json(
      { message: "Avatar must be a file", actualType: typeof avatar },
      422,
    );
  }

  // Validate the avatar is a JPEG, PNG, or GIF
  const allowedTypes = ["image/jpeg", "image/png", "image/gif"];
  if (!allowedTypes.includes(avatar.type)) {
    console.error(\`Invalid avatar file type for goose \${id}: \${avatar.type}\`);
    return c.json({ message: "Avatar must be a JPEG, PNG, or GIF image" }, 422);
  }

  // Get the file extension from the avatar's type
  const fileExtension = avatar.type.split("/")[1];

  // Save the avatar to the bucket
  const bucketKey = \`goose-\${id}-avatar-\${Date.now()}.\${fileExtension}\`;
  await measure("uploadAvatar", () =>
    c.env.GOOSE_AVATARS.put(bucketKey, avatar.stream(), {
      httpMetadata: { contentType: avatar.type },
    }),
  )();

  console.log(\`Avatar uploaded for goose \${id}: \${bucketKey}\`);

  const updatedGoose = await measure("updateGoose", () =>
    updateGoose(db, +id, { avatar: bucketKey }),
  )();

  console.log(\`Avatar updated for goose \${id}\`);
  return c.json(updatedGoose);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 445,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 28,
                  "content": "const getGooseById = measure("getGooseById", async (
  db: ReturnType<typeof drizzle>,
  id: number,
) => {
  console.log(\`Fetching goose with id: \${id}\`);
  return (await db.select().from(geese).where(eq(geese.id, id)))?.[0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 59,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
                {
                  "character": 27,
                  "content": "const updateGoose = measure("updateGoose", async (
  db: ReturnType<typeof drizzle>,
  id: number,
  updateData: Partial<typeof geese.$inferInsert>,
) => {
  console.log({ action: "updateGoose", id, updateData });

  // Simulate a race condition by splitting the update into two parts
  const updatePromises = Object.entries(updateData).map(
    async ([key, value]) => {
      // Introduce a random delay to increase the chance of interleaved updates
      await new Promise((resolve) => setTimeout(resolve, Math.random() * 1000));

      return db
        .update(geese)
        .set({ [key]: value })
        .where(eq(geese.id, id))
        .returning();
    },
  );

  // Wait for all updates to complete
  const results = await Promise.all(updatePromises);

  // Return the last result, which may not contain all updates
  return results[results.length - 1][0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 124,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/api/geese/:id/avatar",
          "sources": [
            {
              "character": 33,
              "content": "async (c) => {
  const sql = neon(c.env.DATABASE_URL);
  const db = drizzle(sql);

  const id = c.req.param("id");

  const goose = await measure("getGooseById", () => getGooseById(db, +id))();

  if (!goose) {
    console.warn(\`Goose not found: \${id}\`);
    return c.json({ message: "Goose not found" }, 404);
  }

  const avatarKey = goose.avatar;

  if (!avatarKey) {
    console.warn(\`Goose \${id} has no avatar\`);
    return c.json({ message: "Goose has no avatar" }, 404);
  }

  console.log(\`Fetching avatar for goose \${id}: \${avatarKey}\`);

  const avatar = await measure("getAvatar", () =>
    c.env.GOOSE_AVATARS.get(avatarKey),
  )();

  if (!avatar) {
    console.error(\`Avatar not found for goose \${id}: \${avatarKey}\`);
    return c.json({ message: "Goose avatar not found" }, 404);
  }

  console.log(\`Avatar retrieved for goose \${id}\`);
  const responseHeaders = mapR2HttpMetadataToHeaders(avatar.httpMetadata);
  return new Response(avatar.body, {
    headers: responseHeaders,
  });
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 500,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
              },
              "references": [
                {
                  "character": 28,
                  "content": "const getGooseById = measure("getGooseById", async (
  db: ReturnType<typeof drizzle>,
  id: number,
) => {
  console.log(\`Fetching goose with id: \${id}\`);
  return (await db.select().from(geese).where(eq(geese.id, id)))?.[0];
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 59,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                      {
                        "import": "eq",
                        "importPath": "drizzle-orm",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
                {
                  "character": 0,
                  "content": "function mapR2HttpMetadataToHeaders(metadata?: R2HTTPMetadata): Headers {
  const headers = new Headers();

  if (!metadata) {
    return headers;
  }

  if (metadata.contentType) {
    headers.set("Content-Type", metadata.contentType);
  }
  if (metadata.contentLanguage) {
    headers.set("Content-Language", metadata.contentLanguage);
  }
  if (metadata.contentDisposition) {
    headers.set("Content-Disposition", metadata.contentDisposition);
  }
  if (metadata.contentEncoding) {
    headers.set("Content-Encoding", metadata.contentEncoding);
  }
  if (metadata.cacheControl) {
    headers.set("Cache-Control", metadata.cacheControl);
  }
  if (metadata.cacheExpiry) {
    headers.set("Cache-Expiry", metadata.cacheExpiry.toUTCString());
  }

  return headers;
}",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
                  "line": 623,
                  "modules": {},
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "all",
          "path": "/always-honk/:echo?",
          "sources": [
            {
              "character": 31,
              "content": "(c) => {
  const echo = c.req.param("echo");
  console.log(\`Always honk endpoint called with echo: \${echo}\`);
  return c.text(\`Honk honk! \${echo ?? ""}\`);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 543,
              "modules": {},
              "references": [],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/ws",
          "sources": [
            {
              "character": 2,
              "content": "upgradeWebSocket((c) => {
    return {
      onMessage(event, ws) {
        const { type, payload } = JSON.parse(event.data);
        const sql = neon(c.env.DATABASE_URL);
        const db = drizzle(sql);

        console.log(\`WebSocket message received: \${type}\`);

        switch (type) {
          case "GET_GEESE":
            measure("getAllGeese", () => getAllGeese(db))().then((geese) => {
              console.log(\`Sending \${geese.length} geese over WebSocket\`);
              ws.send(JSON.stringify({ type: "GEESE", payload: geese }));
            });
            break;
          case "CREATE_GOOSE": {
            const {
              name,
              isFlockLeader,
              programmingLanguage,
              motivations,
              location,
            } = payload;
            const description = \`A person named \${name} who talks like a Goose\`;

            console.log(\`Creating new goose via WebSocket: \${name}\`);
            measure("createGoose", () =>
              createGoose(db, {
                name,
                description,
                isFlockLeader,
                programmingLanguage,
                motivations,
                location,
              }),
            )().then((newGoose) => {
              console.log(\`New goose created via WebSocket: \${newGoose[0].id}\`);
              ws.send(JSON.stringify({ type: "NEW_GOOSE", payload: newGoose }));
            });
            break;
          }
          // ... (handle other message types)
          default:
            console.warn(\`Unknown WebSocket message type: \${type}\`);
            break;
        }
      },
      onClose: () => {
        console.log("WebSocket connection closed");
      },
    };
  })",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
              "line": 551,
              "modules": {
                "@fiberplane/hono-otel": [
                  {
                    "import": "measure",
                    "importPath": "@fiberplane/hono-otel",
                    "name": "@fiberplane/hono-otel",
                    "version": "0.4.0-canary.0",
                  },
                ],
                "@neondatabase/serverless": [
                  {
                    "import": "neon",
                    "importPath": "@neondatabase/serverless",
                    "name": "@neondatabase/serverless",
                    "version": "0.9.4",
                  },
                ],
                "drizzle-orm": [
                  {
                    "import": "drizzle",
                    "importPath": "drizzle-orm/neon-http",
                    "name": "drizzle-orm",
                    "version": "0.32.2",
                  },
                ],
                "hono": [
                  {
                    "import": "upgradeWebSocket",
                    "importPath": "hono/cloudflare-workers",
                    "name": "hono",
                    "version": "4.5.9",
                  },
                ],
              },
              "references": [
                {
                  "character": 27,
                  "content": "const getAllGeese = measure("getAllGeese", async (db: ReturnType<typeof drizzle>) => {
  console.log("Fetching all geese");
  return await db.select().from(geese);
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 6,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [],
                },
                {
                  "character": 27,
                  "content": "const createGoose = measure("createGoose", async (
  db: ReturnType<typeof drizzle>,
  gooseData: Partial<typeof geese.$inferInsert> & Pick<typeof geese.$inferInsert, "name">,
) => {
  const { name, isFlockLeader, programmingLanguage, motivations, location } =
    gooseData;
  const description = \`A person named \${name} who talks like a Goose\`;

  console.log({
    action: "createGoose",
    name,
    isFlockLeader,
    programmingLanguage,
  });

  return await db
    .insert(geese)
    .values({
      name,
      description,
      isFlockLeader,
      programmingLanguage,
      motivations,
      location,
    })
    .returning({
      id: geese.id,
      name: geese.name,
      description: geese.description,
      isFlockLeader: geese.isFlockLeader,
      programmingLanguage: geese.programmingLanguage,
      motivations: geese.motivations,
      location: geese.location,
    });
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/client.ts",
                  "line": 23,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.4.0-canary.0",
                      },
                    ],
                    "drizzle-orm": [
                      {
                        "import": "drizzle",
                        "importPath": "drizzle-orm/neon-http",
                        "name": "drizzle-orm",
                        "version": "0.32.2",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                    {
                      "character": 21,
                      "content": "const geese = pgTable("geese", {
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  description: text("description"),
  isFlockLeader: boolean("is_leader"),
  programmingLanguage: text("programming_language"),
  motivations: jsonb("motivations"),
  location: text("location"),
  bio: text("bio"),
  avatar: text("avatar"),
  honks: integer("honks").default(0),
  createdAt: timestamp("created_at").defaultNow().notNull(),
  updatedAt: timestamp("updated_at").defaultNow().notNull(),
})",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/db/schema.ts",
                      "line": 10,
                      "modules": {
                        "drizzle-orm": [
                          {
                            "import": "pgTable",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "serial",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "text",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "boolean",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "jsonb",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "integer",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                          {
                            "import": "timestamp",
                            "importPath": "drizzle-orm/pg-core",
                            "name": "drizzle-orm",
                            "version": "0.32.2",
                          },
                        ],
                      },
                      "references": [],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
      ],
      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/examples/goose-quotes/src/index.ts",
      "name": "app",
    },
  ],
}
`;

exports[`run test 'module imports' with location '/Users/jaccoflenter/dev/fiberplane/fp…' 1`] = `
{
  "errorCount": 0,
  "results": [
    {
      "entries": [
        {
          "method": "get",
          "path": "/",
          "sources": [
            {
              "character": 2,
              "content": "() => cors()",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/module-imports/index.ts",
              "line": 9,
              "modules": {
                "hono": [
                  {
                    "import": "cors",
                    "importPath": "hono/cors",
                    "name": "hono",
                    "version": "4.6.6",
                  },
                ],
              },
              "references": [],
            },
            {
              "character": 2,
              "content": "(c) => c.text("Hello, Hono!")",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/module-imports/index.ts",
              "line": 10,
              "modules": {},
              "references": [],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/slow",
          "sources": [
            {
              "character": 17,
              "content": "cors()",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/module-imports/index.ts",
              "line": 19,
              "modules": {
                "hono": [
                  {
                    "import": "cors",
                    "importPath": "hono/cors",
                    "name": "hono",
                    "version": "4.6.6",
                  },
                ],
              },
              "references": [],
            },
            {
              "character": 25,
              "content": "async (c) => {
  await sleep(1000);
  return c.text("Hello, Hono (slow)!");
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/module-imports/index.ts",
              "line": 19,
              "modules": {},
              "references": [
                {
                  "character": 0,
                  "content": "export async function sleep(duration: number) {
  return new Promise((resolve) => setTimeout(resolve, duration));
}",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/module-imports/index.ts",
                  "line": 14,
                  "modules": {},
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "user/1",
          "sources": [
            {
              "character": 18,
              "content": "cors()",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/module-imports/index.ts",
              "line": 32,
              "modules": {
                "hono": [
                  {
                    "import": "cors",
                    "importPath": "hono/cors",
                    "name": "hono",
                    "version": "4.6.6",
                  },
                ],
              },
              "references": [],
            },
            {
              "character": 26,
              "content": "async (c) => {
  // await getUser();
  const user = await getUser();
  return c.json(user);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/module-imports/index.ts",
              "line": 32,
              "modules": {},
              "references": [
                {
                  "character": 23,
                  "content": "const getUser = measure("getUser", async () => {
  await new Promise((resolve) => setTimeout(resolve, 100));
  const value: User = {
    name: "John Doe",
    email: "john@doe.com",
  };
  return value;
})",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/module-imports/db.ts",
                  "line": 4,
                  "modules": {
                    "@fiberplane/hono-otel": [
                      {
                        "import": "measure",
                        "importPath": "@fiberplane/hono-otel",
                        "name": "@fiberplane/hono-otel",
                        "version": "0.3.1",
                      },
                    ],
                  },
                  "references": [
                    {
                      "character": 0,
                      "content": "export type User = {
  name: string;
  email: Email;
};",
                      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/module-imports/types.ts",
                      "line": 2,
                      "modules": {},
                      "references": [
                        {
                          "character": 0,
                          "content": "export type Email = string;",
                          "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/module-imports/types.ts",
                          "line": 0,
                          "modules": {},
                          "references": [],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
      ],
      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/module-imports/index.ts",
      "name": "app",
    },
  ],
}
`;

exports[`run test 'multiple files' with location '/Users/jaccoflenter/dev/fiberplane/fp…' 1`] = `
{
  "errorCount": 0,
  "results": [
    {
      "entries": [
        {
          "method": "get",
          "path": "/",
          "sources": [
            {
              "character": 13,
              "content": "(c) => c.text("Hello, Hono!")",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/multiple/index.ts",
              "line": 4,
              "modules": {},
              "references": [],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
      ],
      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/multiple/index.ts",
      "name": "app",
    },
    {
      "entries": [
        {
          "method": "get",
          "path": "/",
          "sources": [
            {
              "character": 13,
              "content": "(c) => {
  return c.json({});
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/multiple/other.ts",
              "line": 2,
              "modules": {},
              "references": [],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "post",
          "path": "/",
          "sources": [
            {
              "character": 14,
              "content": "(c) => c.json({ hello: "world" })",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/multiple/other.ts",
              "line": 5,
              "modules": {},
              "references": [],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
      ],
      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/multiple/other.ts",
      "name": "app",
    },
  ],
}
`;

exports[`run test 'single file' with location '/Users/jaccoflenter/dev/fiberplane/fp…' 1`] = `
{
  "errorCount": 0,
  "results": [
    {
      "entries": [
        {
          "method": "get",
          "path": "/",
          "sources": [
            {
              "character": 13,
              "content": "(c) => c.text("Hello, Hono!")",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/single/index.ts",
              "line": 4,
              "modules": {},
              "references": [],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
      ],
      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/single/index.ts",
      "name": "app",
    },
  ],
}
`;

exports[`run test 'split routes' with location '/Users/jaccoflenter/dev/fiberplane/fp…' 1`] = `
{
  "errorCount": 0,
  "results": [
    {
      "entries": [
        {
          "method": "get",
          "path": "/api/v1/users",
          "sources": [
            {
              "character": 27,
              "content": "(c) => {
  return c.json(USERS);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/users.ts",
              "line": 17,
              "modules": {},
              "references": [
                {
                  "character": 6,
                  "content": "const USERS = [
  {
    id: 1,
    name: "Alice",
    age: 25,
  },
  {
    id: 2,
    name: "Bob",
    age: 30,
  },
]",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/users.ts",
                  "line": 4,
                  "modules": {},
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/api/v1/users/:id",
          "sources": [
            {
              "character": 31,
              "content": "(c) => {
  const id = Number.parseInt(c.req.param("id"));
  const user = USERS.find((u) => u.id === id);
  return c.json(user);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/users.ts",
              "line": 21,
              "modules": {},
              "references": [
                {
                  "character": 6,
                  "content": "const USERS = [
  {
    id: 1,
    name: "Alice",
    age: 25,
  },
  {
    id: 2,
    name: "Bob",
    age: 30,
  },
]",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/users.ts",
                  "line": 4,
                  "modules": {},
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
      ],
      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/users.ts",
      "name": "users",
    },
    {
      "entries": [
        {
          "method": "get",
          "path": "/api/v1/projects",
          "sources": [
            {
              "character": 33,
              "content": "(c) => {
  return c.json(PROJECTS);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/index.ts",
              "line": 18,
              "modules": {},
              "references": [
                {
                  "character": 6,
                  "content": "const PROJECTS = [
  {
    id: 1,
    name: "Project A",
    description: "Project A description",
  },
  {
    id: 2,
    name: "Project B",
    description: "Project B description",
  },
]",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/index.ts",
                  "line": 5,
                  "modules": {},
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/api/v1/projects/:id",
          "sources": [
            {
              "character": 37,
              "content": "(c) => {
  const id = Number.parseInt(c.req.param("id"));
  const project = PROJECTS.find((p) => p.id === id);
  return c.json(project);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/index.ts",
              "line": 22,
              "modules": {},
              "references": [
                {
                  "character": 6,
                  "content": "const PROJECTS = [
  {
    id: 1,
    name: "Project A",
    description: "Project A description",
  },
  {
    id: 2,
    name: "Project B",
    description: "Project B description",
  },
]",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/index.ts",
                  "line": 5,
                  "modules": {},
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
      ],
      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/index.ts",
      "name": "projects",
    },
    {
      "entries": [
        {
          "filename": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/users.ts",
          "name": "users",
          "path": "/",
          "type": "ROUTE_TREE_REFERENCE",
        },
        {
          "filename": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/index.ts",
          "name": "projects",
          "path": "/",
          "type": "ROUTE_TREE_REFERENCE",
        },
      ],
      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/index.ts",
      "name": "app",
    },
    {
      "entries": [
        {
          "method": "get",
          "path": "/api/v1/projects",
          "sources": [
            {
              "character": 33,
              "content": "(c) => {
  return c.json(PROJECTS);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/projects.ts",
              "line": 17,
              "modules": {},
              "references": [
                {
                  "character": 6,
                  "content": "const PROJECTS = [
  {
    id: 1,
    name: "Project A",
    description: "Project A description",
  },
  {
    id: 2,
    name: "Project B",
    description: "Project B description",
  },
]",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/projects.ts",
                  "line": 4,
                  "modules": {},
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
        {
          "method": "get",
          "path": "/api/v1/projects/:id",
          "sources": [
            {
              "character": 37,
              "content": "(c) => {
  const id = Number.parseInt(c.req.param("id"));
  const project = PROJECTS.find((p) => p.id === id);
  return c.json(project);
}",
              "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/projects.ts",
              "line": 21,
              "modules": {},
              "references": [
                {
                  "character": 6,
                  "content": "const PROJECTS = [
  {
    id: 1,
    name: "Project A",
    description: "Project A description",
  },
  {
    id: 2,
    name: "Project B",
    description: "Project B description",
  },
]",
                  "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/projects.ts",
                  "line": 4,
                  "modules": {},
                  "references": [],
                },
              ],
            },
          ],
          "type": "ROUTE_ENTRY",
        },
      ],
      "fileName": "/Users/jaccoflenter/dev/fiberplane/fpx/lsp-analysis/test/test-case/split-routes/projects.ts",
      "name": "projects",
    },
  ],
}
`;
